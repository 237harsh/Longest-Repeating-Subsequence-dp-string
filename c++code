//memoization
	int fun(int i,int j,string &s1,string &s2, vector<vector<int>>&dp)  
	{
	    if(i<0||j<0)return 0;
	    if(dp[i][j]!=-1)return dp[i][j];
	       if(s1[i]==s2[j]&&i!=j)
	       {
	          return dp[i][j]=1+fun(i-1,j-1,s1,s2,dp);
	       }
	       else
	       {
	         return  dp[i][j]=max(fun(i-1,j,s1,s2,dp),fun(i,j-1,s1,s2,dp));  
	       }
	    
	}
		int LongestRepeatingSubsequence(string s1){
		   int l=s1.size();
		   string s2=s1;
		   
		   vector<vector<int>>dp(l+1,vector<int>(l+1,-1));
		   return fun(l-1,l-1,s1,s2,dp);
		   
		   
		   //tabulation
		  /* vector<vector<int>>dp(l+1,vector<int>(l+1,0));
		   
		   for(int i=1;i<=l;i++)
		   {
		       for(int j=1;j<=l;j++)
		       {
		           if(s1[i-1]==s2[j-1]&&i!=j)
		           {
		               dp[i][j]=1+dp[i-1][j-1];
		               
		           }
		           else
		           dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
		       }
		   }
		  
		   return dp[l][l];*/
		}

};

https://practice.geeksforgeeks.org/problems/longest-repeating-subsequence2004/1#
